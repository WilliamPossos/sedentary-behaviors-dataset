package com.example.william.data_set;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.example.william.data_set.Activity;
import com.example.william.data_set.User;
import com.example.william.data_set.UserData;
import com.example.william.data_set.Location;
import com.example.william.data_set.Posture;
import com.example.william.data_set.Action;

import com.example.william.data_set.ActivityDao;
import com.example.william.data_set.UserDao;
import com.example.william.data_set.UserDataDao;
import com.example.william.data_set.LocationDao;
import com.example.william.data_set.PostureDao;
import com.example.william.data_set.ActionDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig activityDaoConfig;
    private final DaoConfig userDaoConfig;
    private final DaoConfig userDataDaoConfig;
    private final DaoConfig locationDaoConfig;
    private final DaoConfig postureDaoConfig;
    private final DaoConfig actionDaoConfig;

    private final ActivityDao activityDao;
    private final UserDao userDao;
    private final UserDataDao userDataDao;
    private final LocationDao locationDao;
    private final PostureDao postureDao;
    private final ActionDao actionDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        activityDaoConfig = daoConfigMap.get(ActivityDao.class).clone();
        activityDaoConfig.initIdentityScope(type);

        userDaoConfig = daoConfigMap.get(UserDao.class).clone();
        userDaoConfig.initIdentityScope(type);

        userDataDaoConfig = daoConfigMap.get(UserDataDao.class).clone();
        userDataDaoConfig.initIdentityScope(type);

        locationDaoConfig = daoConfigMap.get(LocationDao.class).clone();
        locationDaoConfig.initIdentityScope(type);

        postureDaoConfig = daoConfigMap.get(PostureDao.class).clone();
        postureDaoConfig.initIdentityScope(type);

        actionDaoConfig = daoConfigMap.get(ActionDao.class).clone();
        actionDaoConfig.initIdentityScope(type);

        activityDao = new ActivityDao(activityDaoConfig, this);
        userDao = new UserDao(userDaoConfig, this);
        userDataDao = new UserDataDao(userDataDaoConfig, this);
        locationDao = new LocationDao(locationDaoConfig, this);
        postureDao = new PostureDao(postureDaoConfig, this);
        actionDao = new ActionDao(actionDaoConfig, this);

        registerDao(Activity.class, activityDao);
        registerDao(User.class, userDao);
        registerDao(UserData.class, userDataDao);
        registerDao(Location.class, locationDao);
        registerDao(Posture.class, postureDao);
        registerDao(Action.class, actionDao);
    }
    
    public void clear() {
        activityDaoConfig.clearIdentityScope();
        userDaoConfig.clearIdentityScope();
        userDataDaoConfig.clearIdentityScope();
        locationDaoConfig.clearIdentityScope();
        postureDaoConfig.clearIdentityScope();
        actionDaoConfig.clearIdentityScope();
    }

    public ActivityDao getActivityDao() {
        return activityDao;
    }

    public UserDao getUserDao() {
        return userDao;
    }

    public UserDataDao getUserDataDao() {
        return userDataDao;
    }

    public LocationDao getLocationDao() {
        return locationDao;
    }

    public PostureDao getPostureDao() {
        return postureDao;
    }

    public ActionDao getActionDao() {
        return actionDao;
    }

}
